{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint",
		"import"
	],
	"rules": {
		"@typescript-eslint/no-empty-interface": [
			"error",
			{
				"allowSingleExtends": true
			}
		],
		"@typescript-eslint/no-non-null-assertion": 0,
		"@typescript-eslint/explicit-function-return-type": 2,
		"@typescript-eslint/no-unused-vars": 1,
		"@typescript-eslint/no-empty-function": 1,
		"import/no-unresolved": "error",
		"import/order": [
			2,
			{
				"groups": [
					"external",
					"builtin",
					"index",
					"sibling",
					"parent",
					"internal",
					"type"
				],
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				},
				"newlines-between": "always-and-inside-groups"
			}
		]
	},
	"settings": {
		"import/parsers": {
			"@typescript-eslint/parser": [
				".ts",
				".tsx"
			]
		},
		"import/resolver": {
			"typescript": {
				"alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
				"project": "packages/*/tsconfig.json"
			}
		}
	},
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		// "plugin:import/recommended",
		"plugin:import/typescript",
		"plugin:@typescript-eslint/recommended",
		"plugin:react-hooks/recommended",
		"plugin:prettier/recommended"
	]
}